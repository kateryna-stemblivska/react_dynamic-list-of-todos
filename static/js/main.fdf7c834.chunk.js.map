{"version":3,"sources":["api.ts","types/Filter.ts","components/Provider/Context.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","initialState","todos","setTodos","selectedTodo","setSelectedTodo","user","setUser","loading","setLoading","filterBy","ALL","setFilterBy","filterByQuery","setFilterByQuery","hasTodoModal","setHasTodoModal","StateContext","React","createContext","GlobalStateProvider","children","useState","value","useEffect","finally","userId","Provider","TodoItem","todo","id","title","completed","useContext","className","cn","type","onClick","TodoList","filteredTodos","filter","toLowerCase","includes","trim","ACTIVE","COMPLETED","map","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","href","email","name","App","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdf7c834.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React, { useEffect, useState } from 'react';\nimport { getTodos, getUser } from '../../api';\nimport { Filter } from '../../types/Filter';\nimport { State } from '../../types/State';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\nconst initialState: State = {\n  todos: [],\n  setTodos: () => { },\n  selectedTodo: null,\n  setSelectedTodo: () => { },\n  user: null,\n  setUser: () => {},\n  loading: false,\n  setLoading: () => { },\n  filterBy: Filter.ALL,\n  setFilterBy: () => {},\n  filterByQuery: '',\n  setFilterByQuery: () => {},\n  hasTodoModal: false,\n  setHasTodoModal: () => { },\n};\n\nexport const StateContext = React.createContext(initialState);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const GlobalStateProvider: React.FC<Props> = ({ children }) => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [filterBy, setFilterBy] = useState(Filter.ALL);\n  const [filterByQuery, setFilterByQuery] = useState('');\n  const [hasTodoModal, setHasTodoModal] = useState(false);\n\n  const value = {\n    todos,\n    setTodos,\n    selectedTodo,\n    setSelectedTodo,\n    user,\n    setUser,\n    loading,\n    setLoading,\n    filterBy,\n    setFilterBy,\n    filterByQuery,\n    setFilterByQuery,\n    hasTodoModal,\n    setHasTodoModal,\n  };\n\n  useEffect(() => {\n    setLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos)\n        .finally(() => setLoading(false));\n    }, 200);\n  }, []);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser);\n    }\n  }, [selectedTodo]);\n\n  return (\n    <StateContext.Provider value={value}>\n      {children}\n    </StateContext.Provider>\n  );\n};\n","import cn from 'classnames';\nimport React, { useContext } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { StateContext } from '../Provider/Context';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoItem: React.FC<Props> = ({ todo }) => {\n  const { id, title, completed } = todo;\n  const {\n    selectedTodo,\n    setSelectedTodo,\n    setHasTodoModal,\n  } = useContext(StateContext);\n\n  const openTodoInfo = (modalTodo: Todo) => {\n    setSelectedTodo(modalTodo);\n\n    setTimeout(() => {\n      setHasTodoModal(true);\n    }, 100);\n  };\n\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': completed,\n      })}\n    >\n      <td className=\"is-vcentered\">{id}</td>\n      <td className=\"is-vcentered\">\n        {completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-danger': !completed,\n          'has-text-success': completed,\n        })}\n        >\n          {title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => openTodoInfo(todo)}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', {\n              'fa-eye': selectedTodo !== todo,\n              'fa-eye-slash': selectedTodo === todo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React, { useContext } from 'react';\nimport { StateContext } from '../Provider/Context';\nimport { TodoItem } from '../TodoItem';\nimport { Filter } from '../../types/Filter';\n\nconst normalizeData = (str: string) => str.trim().toLowerCase();\n\nexport const TodoList: React.FC = () => {\n  const { todos, filterBy, filterByQuery } = useContext(StateContext);\n\n  const filteredTodos = todos\n    .filter(todo => todo\n      .title.toLowerCase()\n      .includes(normalizeData(filterByQuery)))\n    .filter(todo => {\n      switch (filterBy) {\n        case Filter.ACTIVE:\n          return !todo.completed;\n\n        case Filter.COMPLETED:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          filteredTodos.map(todo => (\n            <TodoItem todo={todo} key={todo.id} />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n","import React, { useContext } from 'react';\nimport { StateContext } from '../Provider/Context';\nimport { Filter } from '../../types/Filter';\n\nexport const TodoFilter: React.FC = () => {\n  const {\n    setFilterBy,\n    setFilterByQuery,\n    filterByQuery,\n  } = useContext(StateContext);\n\n  const changeFilterStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (event.target.value) {\n      case 'active':\n        setFilterBy(Filter.ACTIVE);\n        break;\n\n      case 'completed':\n        setFilterBy(Filter.COMPLETED);\n        break;\n\n      default:\n        setFilterBy(Filter.ALL);\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={changeFilterStatus}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={filterByQuery}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(event) => setFilterByQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {filterByQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setFilterByQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { StateContext } from '../Provider/Context';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const {\n    selectedTodo,\n    user,\n    setUser,\n    setHasTodoModal,\n    setSelectedTodo,\n  } = useContext(StateContext);\n\n  const closeTodoInfo = () => {\n    setUser(null);\n    setSelectedTodo(null);\n    setHasTodoModal(false);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodoInfo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!selectedTodo?.completed ? (\n                <strong className=\"has-text-danger\">Planned</strong>\n              ) : (\n                <strong className=\"has-text-success\">Done</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { StateContext } from './components/Provider/Context';\n\nexport const App: React.FC = () => {\n  const { loading, hasTodoModal, todos } = useContext(StateContext);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n\n              {loading && (\n                <Loader />\n              )}\n\n              {todos.length > 0 && (\n                <TodoList />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {hasTodoModal && (\n        <TodoModal />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { GlobalStateProvider } from './components/Provider/Context';\n\nReactDOM.render(\n  <GlobalStateProvider>\n    <App />\n  </GlobalStateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}